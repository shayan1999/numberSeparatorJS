{"mappings":"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","sources":["<anon>","assets/js/numberSeparator.js","node_modules/number-separator-js/lib/es6/number/numberSeprator.js","node_modules/number-separator-js/lib/es6/number/utils.js"],"sourcesContent":["function $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nvar $3f56e4874ea1c080$exports = {};\n\n$parcel$export($3f56e4874ea1c080$exports, \"numberSeparator\", () => $3f56e4874ea1c080$export$9307ef80c9b9751c);\n$parcel$export($3f56e4874ea1c080$exports, \"seprateStringNumber\", () => $3f56e4874ea1c080$export$fdd5b7207c7e6394);\nvar $eb675e690e4d927d$export$4c0a5405fc0dc720 = function(inputString) {\n    var numericParts = inputString.match(/[-+]?\\d*\\.?\\d+/g) || [];\n    var nonNumericParts = inputString.split(/[-+]?\\d*\\.?\\d+/g);\n    return {\n        numericParts: numericParts,\n        nonNumericParts: nonNumericParts,\n        startWithNumber: inputString.search(numericParts[0]) === 0\n    };\n};\nvar $eb675e690e4d927d$export$43aa4c9867d82b6f = function(nonNumericParts) {\n    return nonNumericParts.filter(function(part) {\n        return part !== \"\";\n    });\n};\nvar $eb675e690e4d927d$export$c9abc37d5234bc20 = function(numericParts, nonNumericParts, startWithNumber) {\n    var result = \"\";\n    for(var i = 0; i < Math.max(numericParts.length, nonNumericParts.length); i++)if (!startWithNumber) result += (nonNumericParts[i] || \"\") + (numericParts[i] || \"\");\n    else result += (numericParts[i] || \"\") + (nonNumericParts[i] || \"\");\n    return result;\n};\n\n\nvar $3f56e4874ea1c080$var$__spreadArray = undefined && undefined.__spreadArray || function(to, from, pack) {\n    if (pack || arguments.length === 2) {\n        for(var i = 0, l = from.length, ar; i < l; i++)if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar $3f56e4874ea1c080$export$9307ef80c9b9751c = function(_a) {\n    var text = _a.text, _b = _a.fixed, fixed = _b === void 0 ? null : _b, _c = _a.seprateMore, seprateMore = _c === void 0 ? false : _c, _d = _a.symbol, symbol = _d === void 0 ? \",\" : _d;\n    var _e = (0, $eb675e690e4d927d$export$4c0a5405fc0dc720)(text), nonNumericParts = _e.nonNumericParts, numericParts = _e.numericParts, startWithNumber = _e.startWithNumber;\n    var localNumeric = $3f56e4874ea1c080$var$__spreadArray([], numericParts, true);\n    for(var i = 0; i < localNumeric.length; i++){\n        var localNumber = \"\".concat(Number(localNumeric[i]));\n        if (fixed !== null && fixed !== undefined) localNumber = \"\".concat(Number(localNumber).toFixed(fixed));\n        var parts = localNumber.toString().split(\".\");\n        parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, symbol);\n        if (seprateMore && parts[1]) parts[1] = parts[1].replace(/\\B(?=(\\d{3})+(?!\\d))/g, symbol);\n        localNumeric[i] = parts.join(\".\");\n    }\n    var result = (0, $eb675e690e4d927d$export$c9abc37d5234bc20)(localNumeric, (0, $eb675e690e4d927d$export$43aa4c9867d82b6f)(nonNumericParts), startWithNumber);\n    return result;\n};\nvar $3f56e4874ea1c080$export$fdd5b7207c7e6394 = function(inputString) {\n    var _a = (0, $eb675e690e4d927d$export$4c0a5405fc0dc720)(inputString), numericParts = _a.numericParts, nonNumericParts = _a.nonNumericParts;\n    var noneNumericPartsRemovedEmpty = (0, $eb675e690e4d927d$export$43aa4c9867d82b6f)(nonNumericParts);\n    return {\n        numericParts: numericParts,\n        nonNumericParts: (0, $eb675e690e4d927d$export$43aa4c9867d82b6f)(noneNumericPartsRemovedEmpty)\n    };\n};\n\n\nconsole.log((0, $3f56e4874ea1c080$exports.numberSeparator)({\n    text: \"hello 1242\"\n}));\nwindow.separate = function separate(text, symbol, fixed, seprateMore) {\n    return (0, $3f56e4874ea1c080$exports.numberSeparator)({\n        text: text,\n        symbol: symbol,\n        fixed: fixed,\n        seprateMore: seprateMore\n    });\n};\nwindow.getSeparateItems = function getSeparateItems(text) {\n    return (0, $3f56e4874ea1c080$exports.seprateStringNumber)(text);\n};\n\n\n//# sourceMappingURL=index.434d7e3c.js.map\n","import {numberSeparator, seprateStringNumber} from \"number-separator-js\";\n\nconsole.log(numberSeparator({text: 'hello 1242'}));\n\nwindow.separate= function separate(text, symbol, fixed, seprateMore){\n    return numberSeparator({text, symbol, fixed, seprateMore})\n}\n\nwindow.getSeparateItems= function getSeparateItems(text){\n    return seprateStringNumber(text);\n}","var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { separateNumbersAndText, joinNumbersAndText, removeEmptyItems, } from \"./utils\";\nexport var numberSeparator = function (_a) {\n    var text = _a.text, _b = _a.fixed, fixed = _b === void 0 ? null : _b, _c = _a.seprateMore, seprateMore = _c === void 0 ? false : _c, _d = _a.symbol, symbol = _d === void 0 ? \",\" : _d;\n    var _e = separateNumbersAndText(text), nonNumericParts = _e.nonNumericParts, numericParts = _e.numericParts, startWithNumber = _e.startWithNumber;\n    var localNumeric = __spreadArray([], numericParts, true);\n    for (var i = 0; i < localNumeric.length; i++) {\n        var localNumber = \"\".concat(Number(localNumeric[i]));\n        if (fixed !== null && fixed !== undefined) {\n            localNumber = \"\".concat(Number(localNumber).toFixed(fixed));\n        }\n        var parts = localNumber.toString().split(\".\");\n        parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, symbol);\n        if (seprateMore && parts[1]) {\n            parts[1] = parts[1].replace(/\\B(?=(\\d{3})+(?!\\d))/g, symbol);\n        }\n        localNumeric[i] = parts.join(\".\");\n    }\n    var result = joinNumbersAndText(localNumeric, removeEmptyItems(nonNumericParts), startWithNumber);\n    return result;\n};\nexport var seprateStringNumber = function (inputString) {\n    var _a = separateNumbersAndText(inputString), numericParts = _a.numericParts, nonNumericParts = _a.nonNumericParts;\n    var noneNumericPartsRemovedEmpty = removeEmptyItems(nonNumericParts);\n    return {\n        numericParts: numericParts,\n        nonNumericParts: removeEmptyItems(noneNumericPartsRemovedEmpty),\n    };\n};\n","export var separateNumbersAndText = function (inputString) {\n    var numericParts = inputString.match(/[-+]?\\d*\\.?\\d+/g) || [];\n    var nonNumericParts = inputString.split(/[-+]?\\d*\\.?\\d+/g);\n    return {\n        numericParts: numericParts,\n        nonNumericParts: nonNumericParts,\n        startWithNumber: inputString.search(numericParts[0]) === 0,\n    };\n};\nexport var removeEmptyItems = function (nonNumericParts) {\n    return nonNumericParts.filter(function (part) { return part !== \"\"; });\n};\nexport var joinNumbersAndText = function (numericParts, nonNumericParts, startWithNumber) {\n    var result = \"\";\n    for (var i = 0; i < Math.max(numericParts.length, nonNumericParts.length); i++) {\n        if (!startWithNumber) {\n            result += (nonNumericParts[i] || \"\") + (numericParts[i] || \"\");\n        }\n        else {\n            result += (numericParts[i] || \"\") + (nonNumericParts[i] || \"\");\n        }\n    }\n    return result;\n};\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$3f56e4874ea1c080$exports","$3f56e4874ea1c080$export$9307ef80c9b9751c","$3f56e4874ea1c080$export$fdd5b7207c7e6394","$eb675e690e4d927d$export$4c0a5405fc0dc720","inputString","numericParts","match","nonNumericParts","split","startWithNumber","search","$eb675e690e4d927d$export$43aa4c9867d82b6f","filter","part","$eb675e690e4d927d$export$c9abc37d5234bc20","result","i","Math","max","length","$3f56e4874ea1c080$var$__spreadArray","to","from","pack","arguments","ar","l","Array","prototype","slice","call","concat","_a","text","_b","fixed","_c","seprateMore","_d","symbol","_e","localNumeric","localNumber","Number","toFixed","parts","toString","replace","join","noneNumericPartsRemovedEmpty","console","log","numberSeparator","window","separate","getSeparateItems","seprateStringNumber"],"version":3,"file":"index.434d7e3c.js.map"}